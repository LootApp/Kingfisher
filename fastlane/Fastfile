
fastlane_version "1.37.0"

default_platform :ios

SLACK_URL = "https://hooks.slack.com/services/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".freeze
FRAMEWORK_NAME = "Kingfisher".freeze
REPOSITORY_NAME = "Kingfisher".freeze

platform :ios do
  before_all do

  end

  desc "Runs all the tests"
  lane :test_all_schemes do
    scan(scheme: "Kingfisher", clean: true)
    scan(scheme: "Kingfisher-macOS", clean: true, destination: 'platform=macOS')
    scan(scheme: "Kingfisher-tvOS", clean: true)
  end
  
  desc "Lint"
  lane :lint do
      carthage(command: "build", no_skip_current: true)
      pod_lib_lint
  end

  desc "Release new version"
  lane :release do |options|
      target_version = options[:version]
      raise "The version is missed. Use `fastlane release version:{version_number}`.`" if target_version.nil?

      ensure_git_branch
      ensure_git_status_clean
      
      test_all_schemes
      lint
      
      sync_build_number_to_git
      increment_version_number(version_number: target_version)
      version_bump_podspec(path: "Kingfisher.podspec", version_number: target_version)

      log = extract_current_change_log(version: target_version)
      release_log = update_change_log(log: log)

      doc(version: target_version)

      git_commit_all(message: "Bump version to #{target_version}")
      
      Actions.sh("git tag -s #{target_version} -m ''")

      push_to_git_remote

      set_github_release(
      repository_name: "onevcat/Kingfisher",
      api_token: ENV['GITHUB_TOKEN'],
      name: release_log[:title],
      tag_name: target_version,
      description: release_log[:text]
      )

      pod_push
  end

  lane :podpush do
    pod_push
  end

  lane :doc do |options|
      target_version = options[:version]
      Actions.sh("cd .. && jazzy \
                        --clean \
                        --author \"Wei Wang\" \
                        --author_url https://onevcat.com \
                        --github_url https://github.com/onevcat/Kingfisher \
                        --github-file-prefix https://github.com/onevcat/Kingfisher/tree/#{target_version} \
                        --module-version #{target_version} \
                        --module Kingfisher \
                        --root-url http://onevcat.github.io/Kingfisher/ \
                        --output docs/")
  end


  desc "Release new version"
  lane :release_loot do |options|
      target_version = options[:version]
      raise "The version is missed. Use `fastlane release version:{version_number}`.`" if target_version.nil?

      ensure_git_branch
      ensure_git_status_clean
      
      # Increment version
      increment_version_number(version_number: target_version)  
      
      # Create Carthage framework
      Actions.sh("cd .. && carthage build --no-skip-current && carthage archive #{FRAMEWORK_NAME}")
      framework_binary = File.join(File.expand_path('../..', __FILE__),"#{FRAMEWORK_NAME}.framework.zip")
      raise "No binary found to upload #{framework_binary}" if File.file?(framework_binary) == false

      unless (`git status --porcelain`).empty?
          git_add
          git_commit(path: ".", message: "New release version bump") 

          # Create release tag
          push_to_git_remote
      end

      set_github_release(
          repository_name: "LootApp/#{REPOSITORY_NAME}",
          api_token: ENV['GITHUB_API_TOKEN'],
          tag_name: target_version,
          upload_assets: [ framework_binary ],
          name: "",
          description: ""
      )
  end

  after_all do |lane|

  end

  error do |lane, exception|

  end
end
